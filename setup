#!sh

set -e # Exit on any command failure

# ~~~~~~~~~~~~~~~ Ensure zsh ~~~~~~~~~~~~~~~~
# Check if zsh is installed and if not, install it.
# This is only sw that is needed to be installed before running the setup script, that will install the rest of the software.

echo "Checking if zsh is installed..."
if ! command -v zsh &> /dev/null; then
    echo "Zsh is not installed. Installing..."
    paru -S zsh
else
    echo "Zsh is already installed."
fi

# ~~~~~~~~~~~~~~~ Set up environment by generating the environment file first ~~~~~~~~~~~~~~~~

source "$(pwd)/functions/run_bash_tpl.zsh"

export DOTFILES=$(pwd)
export ENVIRONMENT_FILE="${CONFIGURATION_DIR:-$DOTFILES/configuration}/environment"
export RUN_TEMPLATE_COMMAND="$(pwd)/vendor/bash-tpl/bash-tpl"

echo "Generating environment file at $ENVIRONMENT_FILE..."
run_bash_tpl "$ENVIRONMENT_FILE.template"

echo "Environment file generated at $ENVIRONMENT_FILE"
source "$ENVIRONMENT_FILE"

# ~~~~~~~~~~~~~~~ Generate templated files ~~~~~~~~~~~~~~~~

echo "Generating templated files..."
run_bash_tpl "$CONFIGURATION_DIR"

# ~~~~~~~~~~~~~~~ Set all scripts as executable ~~~~~~~~~~~~~~~~

echo "Setting all scripts in $SCRIPTS as executable..."
find "$SCRIPTS" -type f -exec chmod +x {} \;

echo "Setting all scripts in $SETUP_SCRIPTS as executable..."
find "$SETUP_SCRIPTS" -type f -exec chmod +x {} \;


# ~~~~~~~~~~~~~~~ Install needed SW ~~~~~~~~~~~~~~~~
# Execute the system setup script with zsh (we are in sh now)

echo "Running system setup script..."
"$SETUP_SCRIPTS/system-setup"

# ~~~~~~~~~~~~~~~ Stow the config ~~~~~~~~~~~~~~~~

cd "$CONFIGURATION_DIR"

dirs_in_configuration=$(find "$CONFIGURATION_DIR" -mindepth 1 -maxdepth 1 -type d -printf "%f\n")
echo stowing directories in "$CONFIGURATION_DIR": $dirs_in_configuration
stow -v -t ~ $dirs_in_configuration $@

cd "$DOTFILES"

# ~~~~~~~~~~~~~~~ Reload ~~~~~~~~~~~~~~~~

"$SCRIPTS/reload"
